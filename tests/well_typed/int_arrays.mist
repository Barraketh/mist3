"List(4, 5)"

struct Range(from: Int, to: Int) {
  def foreachRec(f: Func[Int, Unit], max: Int, i: Int): Unit = {
    if (i < max) {
      f(i)
      foreachRec(f, max, i + 1)
    } else {}
  }

  def foreach(self: Range, f: Func[Int, Unit]): Unit = foreachRec(f, self.to, self.from)
}

struct IntArrayOps(get: Func[Int, Int], set: Func[Int, Int, Unit], print: Func[String], length: Int) {
  def make(length: Int): IntArrayOps = {
    val arr = intArrayMake(length)
    val get = fn (i: Int) => intArrayGet(arr, i)
    val set = fn (i: Int, value: Int) => intArraySet(arr, i, value)
    val print = fn () => intArrayPrint(arr)
    IntArrayOps(get, set, print, length)
  }

  def map(self: IntArrayOps, f: Func[Int, Int]): IntArrayOps = {
    val out = make(self.length)
    Range(0, self.length)::foreach(fn (i: Int) => out.set(i, f(self.get(i))))
    out
  }
}

val arr = IntArrayOps.make(2)
arr.set(0, 1)
arr.set(1, 2)

val arr2 = arr::map(fn (i: Int) => i + 3)
arr2.print()
